# üîó Let Claude query across your federated GraphQL services
#
# What Claude can do with this:
# - "Show me user 12345 with their recent orders"
# - "Get customer profile and purchase history for John"
# - "Display user info with their order status"
# - "Find users with pending orders"
#
# This example demonstrates federated GraphQL:
# 1. User data from identity service
# 2. Order data from commerce service  
# 3. Unified through Apollo Federation
#
# To customize:
# ‚úèÔ∏è Replace with your federated GraphQL endpoint
# ‚úèÔ∏è Update the schema to match your services
# ‚úèÔ∏è Adjust authentication for your federation setup

query GetUserWithOrders($userId: ID!) {
  """
  Fetches user profile with their recent orders from federated services.
  
  Claude will use this when you ask for combined user and order data
  that spans multiple microservices in your federated graph.
  """
  user(id: $userId) @connect(
    http: {
      POST: "https://api.example.com/graphql"  # ‚úèÔ∏è Replace with your federated endpoint
      headers: [{
        name: "Content-Type"
        value: "application/json"
      }, {
        name: "Authorization"
        value: "Bearer YOUR_API_KEY"  # ‚úèÔ∏è Replace with your API key
      }]
    }
    selection: """
      query: "query($userId: ID!) { user(id: $userId) { id name email orders(limit: 10) { id status total items { productId quantity price } } } }"
      variables: { userId: {$args.userId} }
    """
  ) {
    id            # User unique identifier
    name          # User's full name
    email         # User's email address
    orders {
      id          # Order unique identifier
      status      # Order status (pending, shipped, etc.)
      total       # Order total amount
      items {
        productId # Product identifier
        quantity  # Quantity ordered
        price     # Price per item
      }
    }
    # ‚úèÔ∏è Add more federated fields: profile, preferences, shipping address, etc.
    # ‚úèÔ∏è Update the GraphQL query in the selection mapping above to include additional fields
  }
}