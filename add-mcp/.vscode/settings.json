{
  // ==========================================================================
  // VS CODE SETTINGS FOR APOLLO MCP SERVER DEVELOPMENT
  // ==========================================================================
  //
  // This file configures VS Code to provide excellent GraphQL development
  // experience when creating MCP tools. It enables syntax highlighting,
  // auto-completion, schema validation, and more for GraphQL files.
  
  // ==========================================================================
  // GRAPHQL LANGUAGE SUPPORT
  // ==========================================================================
  
  // Associate files with their appropriate languages
  "files.associations": {
    "*.graphql": "graphql",
    "*.gql": "graphql",
    "mcp.*.yaml": "yaml",
    ".apollo/*.yaml": "yaml",
    ".apollo/*.yml": "yaml",
    "mcp.Dockerfile": "dockerfile",
    "*.mcp.Dockerfile": "dockerfile"
  },

  // GraphQL-specific editor settings
  "[graphql]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.autoIndent": "full",
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.wordWrap": "bounded",
    "editor.wordWrapColumn": 100,
    
    // Enable semantic highlighting for GraphQL
    "editor.semanticHighlighting.enabled": true,
    
    // Show suggestions while typing
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    },
    
    // Auto-complete brackets and quotes
    "editor.autoClosingBrackets": "always",
    "editor.autoClosingQuotes": "always",
    "editor.autoSurround": "languageDefined"
  },

  // ==========================================================================
  // GRAPHQL EXTENSION CONFIGURATION
  // ==========================================================================
  
  // GraphQL Language Server configuration
  "graphql.introspect": {
    // Your GraphQL endpoint for schema introspection
    "endpoint": "{{GRAPHQL_ENDPOINT}}",
    
    // Headers for authentication (if required)
    "headers": {
      // "Authorization": "Bearer {{AUTH_TOKEN}}"
      // "X-API-Key": "{{API_KEY}}"
    }
  },

  // GraphQL validation and linting
  "graphql.validate": true,
  "graphql.lint": {
    "enable": true,
    "rules": {
      // Enforce operation naming
      "operations-without-names": "error",
      
      // Enforce field selection
      "fields-without-selections": "error",
      
      // Warn about unused variables
      "unused-variables": "warn",
      
      // Warn about undefined variables
      "undefined-variables": "error",
      
      // Enforce proper fragment usage
      "unused-fragments": "warn"
    }
  },

  // Enable auto-completion from GraphQL schema
  "graphql.autocomplete": {
    "enable": true,
    "showDeprecated": true
  },

  // ==========================================================================
  // FILE EXPLORER CONFIGURATION
  // ==========================================================================
  
  // Group GraphQL files in explorer
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "*.graphql": "*.gql"
  },

  // Show GraphQL files prominently
  "workbench.iconTheme": "vs-minimal",
  "file-icons.associations": {
    "*.graphql": "graphql",
    "*.gql": "graphql"
  },

  // ==========================================================================
  // EDITOR ENHANCEMENTS FOR MCP DEVELOPMENT
  // ==========================================================================
  
  // Enable breadcrumbs for navigation
  "breadcrumbs.enabled": true,
  "breadcrumbs.showFiles": true,
  "breadcrumbs.showSymbols": true,

  // Show outline view for GraphQL operations
  "outline.showFields": true,
  "outline.showFunctions": true,
  "outline.showVariables": true,

  // Enable folding for GraphQL selections
  "editor.foldingStrategy": "indentation",
  "editor.showFoldingControls": "always",

  // ==========================================================================
  // SEARCH AND FIND CONFIGURATION
  // ==========================================================================
  
  // Include GraphQL files in search
  "search.include": {
    "**/*.graphql": true,
    "**/*.gql": true,
    "tools/**": true,
    ".apollo/**": true
  },

  // Exclude node_modules and build artifacts
  "search.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/build": true,
    "**/.git": true,
    "**/coverage": true
  },

  // ==========================================================================
  // YAML CONFIGURATION FOR APOLLO CONFIG FILES
  // ==========================================================================

  // Configure YAML settings for Apollo configuration files
  "[yaml]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    }
  },

  // ==========================================================================
  // JSON SCHEMA CONFIGURATION FOR APOLLO ROUTER AND MCP SERVER
  // ==========================================================================

  // YAML Schema validation for Apollo configuration files
  // This provides intellisense, validation, and auto-completion for Apollo config files
  // For detailed instructions, see: .vscode/schemas/README.md
  "yaml.schemas": {
    // Apollo MCP Server configuration schema
    ".vscode/schemas/mcp-server.schema.json": [
      ".apollo/mcp.*.yaml",
      "mcp.*.yaml"
    ],

    // Apollo Router configuration schema (basic version)
    // For complete schema, run: ./router config schema > .vscode/schemas/router-config.schema.json
    ".vscode/schemas/router-config.schema.json": [
      "router.yaml",
      "*/router.yaml",
      ".apollo/router*.yaml"
    ]
  },


  // ==========================================================================
  // DOCKERFILE CONFIGURATION
  // ==========================================================================
  
  // Configure Docker file settings
  "[dockerfile]": {
    "editor.quickSuggestions": {
      "strings": true
    },
    "editor.formatOnSave": true
  },


  // ==========================================================================
  // JSON CONFIGURATION FOR CONFIG FILES
  // ==========================================================================
  
  // Configure JSON files (like Claude Desktop config)
  "[json]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.quickSuggestions": {
      "strings": true
    }
  },

  "[jsonc]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true
  },

  // ==========================================================================
  // INTEGRATED TERMINAL CONFIGURATION
  // ==========================================================================
  
  // Configure terminal for MCP development workflow
  "terminal.integrated.cwd": "${workspaceFolder}",
  "terminal.integrated.env.osx": {},
  "terminal.integrated.env.linux": {},
  "terminal.integrated.env.windows": {},

  // Add common MCP development tasks to terminal profiles
  "terminal.integrated.profiles.osx": {
    "MCP Development": {
      "path": "/bin/bash",
      "args": [
        "-c",
        "echo 'MCP Development Environment'; echo 'Available commands:'; echo '  docker build -f mcp.Dockerfile -t mcp-server .'; echo '  docker run -p 5050:5000 --env-file .env mcp-server'; echo '  npx @mcp/inspector --port 5050'; echo ''; exec bash"
      ]
    },
    "graphos": {
      "path": "zsh",
      "args": ["-l"],
      "env": {
        "APOLLO_KEY": "{{APOLLO_KEY}}",
        "APOLLO_GRAPH_REF": "{{APOLLO_GRAPH_REF}}",
      }
    }
  },
  "terminal.integrated.defaultProfile.osx": "graphos",

  // ==========================================================================
  // TASKS AND DEBUGGING CONFIGURATION
  // ==========================================================================
  
  // Enable problem matcher for GraphQL validation
  "problems.decorations.enabled": true,
  "problems.showCurrentInStatus": true,

  // Configure git integration for GraphQL files
  "git.decorations.enabled": true,
  "scm.diffDecorations": "all",
  
  // ==========================================================================
  // WORKSPACE-SPECIFIC SETTINGS
  // ==========================================================================
  
  // Workspace trust settings
  "security.workspace.trust.untrustedFiles": "open",
  
  // Auto-save settings for development
  "files.autoSave": "onWindowChange",
  "files.autoSaveDelay": 1000,

  // Enable hot reload feedback
  "files.watcherExclude": {
    "**/node_modules/**": true,
    "**/dist/**": true,
    "**/coverage/**": true
  },

  // ==========================================================================
  // DEVELOPMENT WORKFLOW ENHANCEMENTS
  // ==========================================================================
  
  // Enable emmet for GraphQL (useful for quick field selection)
  "emmet.includeLanguages": {
    "graphql": "css"
  },

  // Configure auto-rename for consistency
  "editor.linkedEditing": true,

  // Enable parameter hints for GraphQL variables
  "editor.parameterHints.enabled": true,
  "editor.parameterHints.cycle": true,

  // ==========================================================================
  // CUSTOM SNIPPETS SUPPORT
  // ==========================================================================
  
  // These settings enable custom GraphQL snippets
  "editor.snippetSuggestions": "top",
  "editor.suggest.snippetsPreventQuickSuggestions": false,

  // ==========================================================================
  // ERROR AND WARNING DISPLAY
  // ==========================================================================
  
  // Configure how GraphQL errors are displayed
  "problems.sortOrder": "severity",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "editor.gotoLocation.multipleReferences": "goto",

  // ==========================================================================
  // FORMATTING AND LINTING
  // ==========================================================================
  
  // Enable format on paste for GraphQL
  "editor.formatOnPaste": true,
  
  // Configure rulers for GraphQL query readability
  "editor.rulers": [80, 120],

  // ==========================================================================
  // MINIMAP CONFIGURATION
  // ==========================================================================
  
  // Configure minimap for better navigation of large GraphQL files
  "editor.minimap.enabled": true,
  "editor.minimap.maxColumn": 120,
  "editor.minimap.renderCharacters": false,

  // ==========================================================================
  // INTELLISENSE CONFIGURATION
  // ==========================================================================
  
  // Enhanced IntelliSense for GraphQL development
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",

  // ==========================================================================
  // COMMENTS AND DOCUMENTATION
  // ==========================================================================
  
  // Better comment highlighting in GraphQL files
  "editor.comments.insertSpace": true,
  "files.trimTrailingWhitespace": true,
  "files.trimFinalNewlines": true,
  "files.insertFinalNewline": true
}